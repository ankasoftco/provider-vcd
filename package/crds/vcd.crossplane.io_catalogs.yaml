---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: catalogs.vcd.crossplane.io
spec:
  group: vcd.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - vcd
    kind: Catalog
    listKind: CatalogList
    plural: catalogs
    singular: catalog
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Catalog is the Schema for the Catalogs API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CatalogSpec defines the desired state of Catalog
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  cacheEnabled:
                    description: True enables early catalog export to optimize synchronization
                    type: boolean
                  deleteForce:
                    description: When destroying use delete_force=True with delete_recursive=True
                      to remove a catalog and any objects it contains, regardless
                      of their state.
                    type: boolean
                  deleteRecursive:
                    description: When destroying use delete_recursive=True to remove
                      the catalog and any objects it contains that are in a state
                      that normally allows removal.
                    type: boolean
                  description:
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: Key and value pairs for catalog metadata.
                    type: object
                  metadataEntry:
                    description: Metadata entries for the given Catalog
                    items:
                      properties:
                        isSystem:
                          description: Domain for this metadata entry. true if it
                            belongs to SYSTEM, false if it belongs to GENERAL
                          type: boolean
                        key:
                          description: Key of this metadata entry. Required if the
                            metadata entry is not empty
                          type: string
                        type:
                          description: 'Type of this metadata entry. One of: ''MetadataStringValue'',
                            ''MetadataNumberValue'', ''MetadataBooleanValue'', ''MetadataDateTimeValue'''
                          type: string
                        userAccess:
                          description: 'User access level for this metadata entry.
                            One of: ''READWRITE'', ''READONLY'', ''PRIVATE'''
                          type: string
                        value:
                          description: Value of this metadata entry. Required if the
                            metadata entry is not empty
                          type: string
                      type: object
                    type: array
                  name:
                    type: string
                  org:
                    description: The name of organization to use, optional if defined
                      at provider level. Useful when connected as sysadmin working
                      across different organizations
                    type: string
                  passwordSecretRef:
                    description: An optional password to access the catalog. Only
                      ASCII characters are allowed in a valid password.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  preserveIdentityInformation:
                    description: Include BIOS UUIDs and MAC addresses in the downloaded
                      OVF package. Preserving the identity information limits the
                      portability of the package and you should use it only when necessary.
                    type: boolean
                  publishEnabled:
                    description: True allows to publish a catalog externally to make
                      its vApp templates and media files available for subscription
                      by organizations outside the Cloud Director installation.
                    type: boolean
                  storageProfileId:
                    description: Optional storage profile ID
                    type: string
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: deleteForce is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.deleteForce)
            - message: deleteRecursive is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.deleteRecursive)
            - message: name is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.name)
          status:
            description: CatalogStatus defines the observed state of Catalog.
            properties:
              atProvider:
                properties:
                  cacheEnabled:
                    description: True enables early catalog export to optimize synchronization
                    type: boolean
                  catalogVersion:
                    description: Catalog version number.
                    type: number
                  created:
                    description: Time stamp of when the catalog was created
                    type: string
                  deleteForce:
                    description: When destroying use delete_force=True with delete_recursive=True
                      to remove a catalog and any objects it contains, regardless
                      of their state.
                    type: boolean
                  deleteRecursive:
                    description: When destroying use delete_recursive=True to remove
                      the catalog and any objects it contains that are in a state
                      that normally allows removal.
                    type: boolean
                  description:
                    type: string
                  href:
                    description: Catalog HREF
                    type: string
                  id:
                    type: string
                  isLocal:
                    description: True if this catalog belongs to the current organization.
                    type: boolean
                  isPublished:
                    description: True if this catalog is published.
                    type: boolean
                  isShared:
                    description: True if this catalog is shared.
                    type: boolean
                  mediaItemList:
                    description: List of Media items in this catalog
                    items:
                      type: string
                    type: array
                  metadata:
                    additionalProperties:
                      type: string
                    description: Key and value pairs for catalog metadata.
                    type: object
                  metadataEntry:
                    description: Metadata entries for the given Catalog
                    items:
                      properties:
                        isSystem:
                          description: Domain for this metadata entry. true if it
                            belongs to SYSTEM, false if it belongs to GENERAL
                          type: boolean
                        key:
                          description: Key of this metadata entry. Required if the
                            metadata entry is not empty
                          type: string
                        type:
                          description: 'Type of this metadata entry. One of: ''MetadataStringValue'',
                            ''MetadataNumberValue'', ''MetadataBooleanValue'', ''MetadataDateTimeValue'''
                          type: string
                        userAccess:
                          description: 'User access level for this metadata entry.
                            One of: ''READWRITE'', ''READONLY'', ''PRIVATE'''
                          type: string
                        value:
                          description: Value of this metadata entry. Required if the
                            metadata entry is not empty
                          type: string
                      type: object
                    type: array
                  name:
                    type: string
                  numberOfMedia:
                    description: Number of Medias this catalog contains.
                    type: number
                  numberOfVappTemplates:
                    description: Number of vApps templates this catalog contains.
                    type: number
                  org:
                    description: The name of organization to use, optional if defined
                      at provider level. Useful when connected as sysadmin working
                      across different organizations
                    type: string
                  ownerName:
                    description: Owner name from the catalog.
                    type: string
                  preserveIdentityInformation:
                    description: Include BIOS UUIDs and MAC addresses in the downloaded
                      OVF package. Preserving the identity information limits the
                      portability of the package and you should use it only when necessary.
                    type: boolean
                  publishEnabled:
                    description: True allows to publish a catalog externally to make
                      its vApp templates and media files available for subscription
                      by organizations outside the Cloud Director installation.
                    type: boolean
                  publishSubscriptionType:
                    description: PUBLISHED if published externally, SUBSCRIBED if
                      subscribed to an external catalog, UNPUBLISHED otherwise.
                    type: string
                  publishSubscriptionUrl:
                    description: URL to which other catalogs can subscribe
                    type: string
                  storageProfileId:
                    description: Optional storage profile ID
                    type: string
                  vappTemplateList:
                    description: List of catalog items in this catalog
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
