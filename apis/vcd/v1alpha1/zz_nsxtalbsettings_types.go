/*
Copyright 2023 ANKASOFT
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type NsxtAlbSettingsObservation struct {

	// Edge gateway ID
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The IPv6 network definition in Gateway CIDR format which will be used by Load Balancer service on Edge (VCD 10.4.0+)
	IPv6ServiceNetworkSpecification *string `json:"ipv6ServiceNetworkSpecification,omitempty" tf:"ipv6_service_network_specification,omitempty"`

	// Defines if ALB is enabled on Edge Gateway
	IsActive *bool `json:"isActive,omitempty" tf:"is_active,omitempty"`

	// Enabling transparent mode allows to configure Preserve Client IP on a Virtual Service (VCD 10.4.1+)
	IsTransparentModeEnabled *bool `json:"isTransparentModeEnabled,omitempty" tf:"is_transparent_mode_enabled,omitempty"`

	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	Org *string `json:"org,omitempty" tf:"org,omitempty"`

	// Optional custom network CIDR definition for ALB Service Engine placement (VCD default is 192.168.255.1/25)
	ServiceNetworkSpecification *string `json:"serviceNetworkSpecification,omitempty" tf:"service_network_specification,omitempty"`

	// Feature set for ALB in this Edge Gateway. One of 'STANDARD', 'PREMIUM'.
	SupportedFeatureSet *string `json:"supportedFeatureSet,omitempty" tf:"supported_feature_set,omitempty"`

	// The name of VDC to use, optional if defined at provider level
	Vdc *string `json:"vdc,omitempty" tf:"vdc,omitempty"`
}

type NsxtAlbSettingsParameters struct {

	// Edge gateway ID
	// +kubebuilder:validation:Optional
	EdgeGatewayID *string `json:"edgeGatewayId,omitempty" tf:"edge_gateway_id,omitempty"`

	// The IPv6 network definition in Gateway CIDR format which will be used by Load Balancer service on Edge (VCD 10.4.0+)
	// +kubebuilder:validation:Optional
	IPv6ServiceNetworkSpecification *string `json:"ipv6ServiceNetworkSpecification,omitempty" tf:"ipv6_service_network_specification,omitempty"`

	// Defines if ALB is enabled on Edge Gateway
	// +kubebuilder:validation:Optional
	IsActive *bool `json:"isActive,omitempty" tf:"is_active,omitempty"`

	// Enabling transparent mode allows to configure Preserve Client IP on a Virtual Service (VCD 10.4.1+)
	// +kubebuilder:validation:Optional
	IsTransparentModeEnabled *bool `json:"isTransparentModeEnabled,omitempty" tf:"is_transparent_mode_enabled,omitempty"`

	// The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across different organizations
	// +kubebuilder:validation:Optional
	Org *string `json:"org,omitempty" tf:"org,omitempty"`

	// Optional custom network CIDR definition for ALB Service Engine placement (VCD default is 192.168.255.1/25)
	// +kubebuilder:validation:Optional
	ServiceNetworkSpecification *string `json:"serviceNetworkSpecification,omitempty" tf:"service_network_specification,omitempty"`

	// Feature set for ALB in this Edge Gateway. One of 'STANDARD', 'PREMIUM'.
	// +kubebuilder:validation:Optional
	SupportedFeatureSet *string `json:"supportedFeatureSet,omitempty" tf:"supported_feature_set,omitempty"`

	// The name of VDC to use, optional if defined at provider level
	// +kubebuilder:validation:Optional
	Vdc *string `json:"vdc,omitempty" tf:"vdc,omitempty"`
}

// NsxtAlbSettingsSpec defines the desired state of NsxtAlbSettings
type NsxtAlbSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NsxtAlbSettingsParameters `json:"forProvider"`
}

// NsxtAlbSettingsStatus defines the observed state of NsxtAlbSettings.
type NsxtAlbSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NsxtAlbSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// NsxtAlbSettings is the Schema for the NsxtAlbSettingss API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,vcd}
type NsxtAlbSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.edgeGatewayId)",message="edgeGatewayId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="self.managementPolicy == 'ObserveOnly' || has(self.forProvider.isActive)",message="isActive is a required parameter"
	Spec   NsxtAlbSettingsSpec   `json:"spec"`
	Status NsxtAlbSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NsxtAlbSettingsList contains a list of NsxtAlbSettingss
type NsxtAlbSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NsxtAlbSettings `json:"items"`
}

// Repository type metadata.
var (
	NsxtAlbSettings_Kind             = "NsxtAlbSettings"
	NsxtAlbSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NsxtAlbSettings_Kind}.String()
	NsxtAlbSettings_KindAPIVersion   = NsxtAlbSettings_Kind + "." + CRDGroupVersion.String()
	NsxtAlbSettings_GroupVersionKind = CRDGroupVersion.WithKind(NsxtAlbSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&NsxtAlbSettings{}, &NsxtAlbSettingsList{})
}
